user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_session_timeout 1d;
    
    # Отключаем OCSP stapling
    ssl_stapling off;
    ssl_stapling_verify off;

    # Gzip settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Сервер для HTTP - перенаправляет на HTTPS
    server {
        listen 80;
        server_name dantizt.ru www.dantizt.ru;
        
        # Перенаправление всех HTTP запросов на HTTPS
        return 301 https://$host$request_uri;
    }
    
    # Основной сервер для HTTPS
    server {
        listen 443 ssl;
        server_name dantizt.ru www.dantizt.ru;
        
        # SSL настройки
        ssl_certificate /etc/nginx/ssl/dantizt.ru.crt;
        ssl_certificate_key /etc/nginx/ssl/dantizt.ru.key;
        
        # Дополнительные настройки безопасности
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        
        # Proxy settings
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Полностью отключаем модификацию куки Nginx-ом
        proxy_cookie_path / "/; SameSite=Lax; HttpOnly";
        proxy_cookie_domain off;
        proxy_set_header Cookie $http_cookie;
        
        # Frontend
        location / {
            proxy_pass http://front:3000;
        }
        
        # API
        location /api/v1 {
            rewrite ^/api/v1(/.*)$ /api/v1$1 break;
            proxy_pass http://api:8000;
        }
        
        # Static files for API
        location /static {
            proxy_pass http://api:8000/static;
        }
        
        # Media files for API
        location /media {
            proxy_pass http://api:8000/media;
        }
        
        # Websocket for API
        location /ws {
            proxy_pass http://api:8000/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}
